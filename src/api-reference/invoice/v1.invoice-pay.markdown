---
title: Invoice Pay Version 1.0
layout: reference
---

**Pre-release**

* [Overview](#overview)
* [Scopes](#scopes)
* [Obtaining payments](#obtain-payment)
* [Updating a payment with status](#updating-payment)
* [Schema](#schema)
  * [Payments](#schema-payments)
  * [Payment](#schema-payment)
  * [Invoice](#schema-invoice)
  * [Vendor](#schema-vendor)
  * [Amount](#schema-amount)
  * [Payment Update](#schema-payment-update)
    * [Payment Update Status](#schema-payment-update-status)
    * [Payment Method](#schema-payment-method)
  * [Errors](#schema-errors)
  * [Error](#schema-error)

## <a name="overview"></a>Overview

SAP Concur partners with external payment providers for processing invoice payments. These payment providers are listed on the App Center and can integrate with the Invoice product by using the Pay APIs listed below. Payment providers can use these APIs to get a list of all the payments authorized to be processed by them and to send back status of those payments.

## <a name="scopes"></a>Scopes

The following scopes will need to be included in the company JWT:

* `invoice.providerpayment.write`
* `company.read`

## <a name="obtain-payment"></a>Obtaining payments

Payment providers can use this endpoint to get a list of payments.
* This API will return all payments with a status [PENDING_RETRIEVAL](#schema-payment-update-status) and payment method PAVPVD. After an invoice is approved and extracted it will be converted into a payment with status [PENDING_RETRIEVAL](#schema-payment-update-status)
* It will return a max of 500 records at a time. In order to ensure that all payments are retrieved, call this API till you receive an empty payment in the response.
* Payment provider will need to acknowledge that payments were received. This can be done by using the [API to update payment status](#updating-payment) and updating the status of the payment to [RETRIEVED](#schema-payment-update-status)

### Request

#### Headers

* [RFC 7235 Authorization](https://tools.ietf.org/html/rfc7235#section-4.2)
* [RFC 7231 Accept](https://tools.ietf.org/html/rfc7231#section-5.3.2)

#### Parameters

Name | Type | Format | Description
-----|------|--------|------------
`companyId`|`string`|-|**Required** The UUID4 value from the Concur Profile service.

#### Payload

Not applicable.

### Response

#### Status Codes

* [200 OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)
* [401 Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)
* [403 Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)
* [404 Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)

#### Headers

* [RFC 7231 Content-Type](https://tools.ietf.org/html/rfc7231#section-3.1.1.5)
* `concur-correlationid` is a Concur specific custom header used for technical support in the form of a [RFC 4122 A Universally Unique IDentifier (UUID) URN Namespace](https://tools.ietf.org/html/rfc4122)

#### Payload

[Payments](#schema-payments)

### Example

#### Request

```
GET https://us.api.concursolutions.com/payments?companyId={companyId}
Accept: application/json
Authorization: BEARER {token}
```

#### Response

```
200 OK
Content-Type: application/json
```

```json
{
  "payments": [
    {
      "paymentId": "0f27533f-ce38-4f43-a2f3-fa9f0e6b33fc",
      "paymentMethod": "PAYPVD",
      "paymentDueDate": "2018-08-09",
      "totalAmount":{
        "amount": "30.00",
        "currency": "USD"
      },
      "invoices": [
        {
          "invoiceNumber": "AGH87",
          "invoiceID": "1ADFBB440D7045F68DE2",
          "invoiceAmount":{
            "amount": "30.00",
            "currency": "USD"
          },
          "paymentAmount":{
            "amount": "30.00",
            "currency": "USD"
          },
          "notesToSupplier": null
        }
      ],
      "vendor":{
        "addressLine1": "PO Box 0-ach",
        "addressLine2": null,
        "addressLine3": null,
        "vendorAddrCode": "1160",
        "city": "Chicago0",
        "postalCode": "60680-28160",
        "countryName": "UNITED STATES",
        "countryCode": "US",
        "firstName": null,
        "lastName": null,
        "phoneNumber": null,
        "email": null,
        "vendorCode": "1160",
        "vendorName": "Dell",
        "buyerAccountNumber": "Buyer account number"
      }
    }
  ]
}
```

## <a name="updating-payment"></a>Updating a payment with status

Payment providers can use this endpoint to provide updates to the status of payments.

### Request

#### Headers

* [RFC 7235 Authorization](https://tools.ietf.org/html/rfc7235#section-4.2)
* [RFC 7231 Content-Type](https://tools.ietf.org/html/rfc7231#section-3.1.1.5))

#### Parameters

Name|Type|Format|Description
---|---|---|---
`paymentId`|`string`|-|**Required** The identifier of the payment to update.

#### Payload

[Payment Update](#schema-payment-update)

### Response

#### Status Codes

* [200 OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)
* [400 Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)
* [403 Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)
* [404 Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)
* [500 Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)

#### Headers

* `concur-correlationid` is a Concur specific custom header used for technical support in the form of a [RFC 4122 A Universally Unique IDentifier (UUID) URN Namespace](https://tools.ietf.org/html/rfc4122)
* [RFC 7231 Content-Type](https://tools.ietf.org/html/rfc7231#section-3.1.1.5)

#### Payload

[Payment Update](#schema-payment-update)

### Example

#### Request

```
POST https://us.api.concursolutions.com/payments/{paymentId}
Authorization: BEARER {token}
Content-Type: application/json
```

```json
{
  "providerReference" : "hdoesofdl",
  "status" : "PAID",
  "statusMessage" : "Payment was successful",
  "paymentAdjustmentNotes" : null,
  "statusDate" : "2018-05-10",
  "paymentInitiationDate" : "2018-05-09",
  "paymentSettlementDate" : "2018-05-09",
  "thirdPartyPaymentIdentifier" : "69249",
  "paymentMethod" : "CHECK",
  "paidAmount" : {
    "amount": "30.00",
    "currency": "USD"
  }
}
```

#### Response

```
200 OK
Content-Type: application/json
```

```json
{
  "providerReference" : "hdoesofdl",
  "status" : "PAID",
  "statusMessage" : "Payment was successful",
  "paymentAdjustmentNotes" : null,
  "statusDate" : "2018-05-10",
  "paymentInitiationDate" : "2018-05-09",
  "paymentSettlementDate" : "2018-05-09",
  "thirdPartyPaymentIdentifier" : "69249",
  "paymentMethod" : "CHECK",
  "paidAmount" : {
    "amount": "30.00",
    "currency": "USD"
  }
}
```

## <a name="schema"></a>Schema

### <a name="schema-payments"></a>Payments

Name | Type | Format | Description
-----|------|--------|------------
`payments`|`array`|[Payment](#schema-payment)|Array of payments

### <a name="schema-payment"></a>Payment

Name | Type | Format | Description
-----|------|--------|------------
`invoices`|`array`|[Invoice](#schema-invoice)|Array of invoices that need to be batched in a payment
`paymentDueDate`|`string`|YYYY-MM-DD|The date by which the payment should be made. Format: YYYY-MM-DD
`paymentID`|`string`|-|Unique identifier of the payment in Concur (max 36)
`paymentMethod`|`string`|-|The value is always PAYPVD which means that the client wants to pay using a payment provider (max 15)
`totalAmount`|`object`|[Amount](#schema-amount)|This amount needs to be paid to the vendor
`vendor`|`object`|[Vendor](#schema-vendor)|Vendor requesting the payment

### <a name="schema-invoice"></a>Invoice

Name | Type | Format | Description
-----|------|--------|------------
`invoiceAmount`|`object`|[Amount](#schema-amount)|Amount on the invoice
`invoiceNumber`|`string`|-|Invoice Number (max 50)
`invoiceID`|`string`|-|Unique identifier of the invoice in Concur. This can be used to get additional invoice information from other APIs. This is the same as paymentRequestID in other Invoice APIs (max 20)
`notesToSupplier`|`string`|-|Notes to the supplier contain remittance information that the buyer wants to provide to the supplier (max 500)
`paymentAmount`|`object`|[Amount](#schema-amount)|Payment amount on the invoice

### <a name="schema-vendor"></a>Vendor

Name | Type | Format | Description
-----|------|--------|------------
`buyerAccountNumber`|`string`|-|Buyer Account Number (max 50)
`vendorCode`|`string`|-|Vendor Code (max 32)
`vendorName`|`string`|-|Vendor Name (max 255)
`addressLine1`|`string`|-|Address line 1 (max 255)
`addressLine2`|`string`|-|Address line 2 (max 255)
`addressLine3`|`string`|-|Address line 3 (max 255)
`city`|`string`|-|City (max 255)
`countryCode`|`string`|-|Country Code (max 2)
`countryName`|`string`|-|Country Name (max 64)
`postalCode`|`string`|-|Postal Code (max 20)
`vendorAddrCode`|`string`|-|Vendor Address Code (max 64)
`email`|`string`|-|Email Address (max 255)
`firstName`|`string`|-|First Name (max 255)
`lastName`|`string`|-|Last Name (max 255)
`phoneNumber`|`string`|-|Phone Number (max 25)

### <a name="schema-amount"></a>Amount

Name | Type | Format | Description
-----|------|--------|------------
`amount`|`string`|-|Amount (max 20)
`currency`|`string`|-|Currency Code (max 3)

### <a name="schema-payment-update"></a>Payment Update

Name|Type|Format|Description
---|---|---|---
`providerReference`|`string`|-|Unique identifier of the payment in the payment provider's system (max 100)
`status`|`string`|[Payment Update Status](#schema-payment-update-status)|**Required** Used to depict success, error or any other intermediate state, defined by Concur
`statusMessage`|`string`|-|description of the status (max 255) *Payment provider can provide anything they want*
`paymentAdjustmentNotes`|`string`|-|Payment adjustment notes sent by the payment provider  (max 255)
`statusDate`|`string`|YYYY-MM-DD|**Required** The date that the payment provider recorded this status change
`paymentInitiationDate`|`string`|YYYY-MM-DD|The date the payment was initiated
`paymentSettlementDate`|`string`|YYYY-MM-DD|The date the payment will be in the payees account
`thirdPartyPaymentIdentifier`|`string`|-|Check number if the payment was done via check or trace number for ACH payments  max (255)
`paymentMethod`|`string`|[Payment Provider Method](#schema-payment-provider-method)|**Required if the status is Paid, Check Processed, Card Processed** Payment method used by the payment provider
`paidAmount`|`object`|[Amount](#schema-amount)|**Required if the status is Paid, Check Processed, Card Processed** Amount paid by the payment provider

#### <a name="schema-payment-update-status"></a>Payment Update Status

Value|Description|Status available in the Payment Confirmation Extract
---|---|---
`PENDING_RETRIEVAL`|Not yet retrieved by the payment provider|Not available
`RETRIEVED`|Retrieved by the payment provider|Not available
`PROCESSING`|Payment is being processed by the payment provider|Not available
`REJECTED`|Payment was rejected by the payment provider|Not available
`RETURNED`|Payment was returned by the bank|Not available
`CANCELED`|Payment was canceled|`CANCEL`
`CHECK_PRINTED`|Check was printed|Not available
`CHECK_MAILED`|Check was mailed|Not available
`CHECK_PROCESSED`|Check was processed|`PAID`
`CHECK_VOIDED`|Check was voided|`VOID`
`PAID`|Payment was successfully made|`PAID`
`CARD_EMAIL_SENT`|Email with card information sent to vendor|Not available
`CARD_AUTHORIZED`|Card was authorized by the merchant|Not available
`CARD_SETTLED`|Card was settled by vendor|`PAID`

#### <a name="schema-payment-privider-method"></a>Payment Provider Method

Value|Description
---|---
`ACH`|ACH payment
`CHECK`|Check payment
`WIRE`|Wire payment
`CARD`|Virtual Card payment
`OTHER`|Any other payment method

### <a name="schema-errors"></a>Errors

Name | Type | Format | Description
-----|------|--------|------------
`errors`|`array`|[Error](#schema-error)|An array of errors.

### <a name="schema-error"></a>Error

Name | Type | Format | Description
-----|------|--------|------------
`errorCode`|`string`|-|**Required** Machine readable code associated with the error.
`errorMessage`|`string`|-|**Required** Human readable message associated with the error.
