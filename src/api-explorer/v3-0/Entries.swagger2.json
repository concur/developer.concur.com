{
  "swagger": "2.0",
  "host": "www.concursolutions.com",
  "basePath": "/api/v3.0",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "info": {
    "title": "Entries",
    "description": "",
    "version": "3.0"
  },
  "tags": [
    {
      "name": "Resources",
      "description": ""
    }
  ],
  "paths": {
    "/expense/entries": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get all expense entries",
        "description": "Gets all expense entries owned by the user.",
        "parameters": [
          {
            "name": "reportID",
            "in": "query",
            "description": "The report ID of the entries to be retrieved.  Format: An alpha-numeric GUID string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentTypeID",
            "in": "query",
            "description": "The ID of the payment type of the entries to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchID",
            "in": "query",
            "description": "The batch ID for the entries to be retrieved. The batch ID identifies the batch that contains the report payee associated with the entries. Use the GET Payment Batch function to learn the Payment Type ID for the desired Payment Type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "isBillable",
            "in": "query",
            "description": "Determines whether the operation retrieves entries that are billable. Format: true or false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "attendeeTypeCode",
            "in": "query",
            "description": "The ID of the attendee type for the entries to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "hasAttendees",
            "in": "query",
            "description": "Determines whether the operation retrieves entries that have attendees. Format: true or false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hasVAT",
            "in": "query",
            "description": "Determines whether the operation retrieves entries that have VAT details. Format: true or false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expenseTypeCode",
            "in": "query",
            "description": "The code for the expense type for the entries to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "attendeeID",
            "in": "query",
            "description": "The attendee associated with the entries to be retrieved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting point of the next set of results, after the limit specified in the limit field has been reached.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records to return. Default value: 25",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns the entries. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EntryCollection"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create a new expense entry",
        "description": "Creates a new expense entry.",
        "parameters": [
          {
            "name": "content",
            "in": "body",
            "description": "The expense entry object to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntryPost"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns the entries. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateResponse"
            }
          }
        }
      }
    },
    "/expense/entries/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a single expense entry by ID",
        "description": "Gets an expense entry by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The expense entry ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns the entries. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EntryGet"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Update an expense entry by ID",
        "description": "Updates the specified expense entry. Only the fields provided in the supplied object are updated. Missing fields will not be altered.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The expense entry ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The partial or complete expense entry object to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntryPut"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns the entries. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Void"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete an expense entry by ID",
        "description": "Deletes the specified expense entry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the expense entry to delete.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns the entries. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Void"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateResponse": {
      "properties": {
        "ID": {
          "type": "string"
        },
        "URI": {
          "type": "string"
        }
      }
    },
    "CustomField": {
      "properties": {
        "Code": {
          "type": "string",
          "description": "For list fields, this is the list item code."
        },
        "ListItemID": {
          "type": "string",
          "description": "For list fields, this is the list item ID."
        },
        "Type": {
          "type": "string",
          "description": "The custom field type. Possible values: Amount, Boolean, ConnectedList, Date, Integer, List, Number, Text"
        },
        "Value": {
          "type": "string",
          "description": "The value in the Org Unit or Custom field. For list fields, this is the name of the list item.  Maximum length: 48 characters"
        }
      }
    },
    "Decimal": {
      "properties": {}
    },
    "EntryCollection": {
      "properties": {
        "Items": {
          "$ref": "#/definitions/EntryGet"
        },
        "NextPage": {
          "type": "string",
          "description": "The URI of the next page of results, if any."
        }
      }
    },
    "EntryGet": {
      "properties": {
        "AllocationType": {
          "type": "string",
          "description": "The type of allocations for the expense. Possible values: P - partial allocation, F - full allocation, N - no allocation."
        },
        "ApprovedAmount": {
          "type": "number",
          "format": "double",
          "description": "The approved amount of the expense entry, in the report currency."
        },
        "CompanyCardTransactionID": {
          "type": "string",
          "description": "The unique identifier for a company card transaction that is associated with this expense. Concur Expense uses the Credit Card Import job to import company card transactions. Use the GET CommpanyCardTransactions function to get information about these card transactions. This element is null when there is no company card transaction associated with this expense."
        },
        "Custom1": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom10": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom11": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom12": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom13": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom14": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom15": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom16": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom17": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom18": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom19": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom2": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom20": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom21": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom22": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom23": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom24": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom25": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom26": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom27": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom28": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom29": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom3": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom30": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom31": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom32": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom33": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom34": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom35": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom36": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom37": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom38": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom39": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom4": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom40": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom5": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom6": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom7": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom8": {
          "$ref": "#/definitions/CustomField"
        },
        "Custom9": {
          "$ref": "#/definitions/CustomField"
        },
        "Description": {
          "type": "string",
          "description": "The description of the expense. Maximum length: 64 characters"
        },
        "ElectronicReceiptID": {
          "type": "string",
          "description": "The unique identifier for an eReceipt that is associated with this expense. Use the GET eReceipts function to get information about this eReceipt. This element is null when there is no eReceipt associated with this expense."
        },
        "EmployeeBankAccountID": {
          "type": "string",
          "description": "The unique identifier of an employee bank account that is associated with this expense. Typically, this element is used when Expense Pay reimburses the employee for this expense. Use the GET BankAccounts function to get information about this bank account."
        },
        "ExchangeRate": {
          "type": "number",
          "format": "double",
          "description": "The currency conversion rate that converts the transaction amount that is in the transaction currency into the posted amount that is in the report currency. This element is typically not provided. If this element is empty for transactions in a currency different than the user's reimbursement currency, Expense will use the company's configured exchange rates to determine the posted amount for the transaction. If the system is not able to determine the exchange rate, a value of 1.0 will be used."
        },
        "ExpenseTypeCode": {
          "type": "string",
          "description": "The code for the expense type."
        },
        "ExpenseTypeName": {
          "type": "string",
          "description": "The name of the expense type, localized to the user's language."
        },
        "FormID": {
          "type": "string",
          "description": "The ID of the form used by this expense entry."
        },
        "HasAppliedCashAdvance": {
          "type": "boolean",
          "description": "Whether the entry has a cash advance applied to it. Use the GET ExpenseEntryAccountingCalculations function to get cash advance application information for this entry. Format: true or false"
        },
        "HasAttendees": {
          "type": "boolean",
          "description": "Indicates whether the expense has attendees. Format: true or false"
        },
        "HasComments": {
          "type": "boolean",
          "description": "Whether the expense has comments. Use the GET ExpenseEntryComments function to get information about this entry's comments. Format: true or false"
        },
        "HasExceptions": {
          "type": "boolean",
          "description": "Whether the expense has exceptions. Use the GET ExpenseEntryExceptions function to get information about this entry's exceptions. Format: true or false"
        },
        "HasImage": {
          "type": "boolean",
          "description": "Indicates whether there is an entry image attached to the entry. Use the GET Entry Images function to get this entry image. Format: true or false"
        },
        "HasItemizations": {
          "type": "boolean",
          "description": "Indicates whether the expense has itemizations. Use the Format: true or false"
        },
        "HasVAT": {
          "type": "boolean",
          "description": "Indicates whether the entry has VAT data. Use the GET ExpenseEntryAccountingCalculations function to get VAT information for this entry. Format: true or false"
        },
        "ID": {
          "type": "string",
          "description": "The unique identifier of the resource."
        },
        "IsBillable": {
          "type": "boolean",
          "description": "Indicates whether the expense is billable. Format: true or false"
        },
        "IsImageRequired": {
          "type": "boolean",
          "description": "Indicates whether an entry image is required for the entry. Format: true or false"
        },
        "IsPaidByExpensePay": {
          "type": "boolean",
          "description": "Whether the entry is paid using the Expense Pay service. This element has a value if the report has reached the Processing Payment workflow step, because this is when Concur Expense determines whether it will be paid by Expense Pay. Format: true or false"
        },
        "IsPersonal": {
          "type": "boolean",
          "description": "Indicates whether the expense is personal (that is, non-reimbursable). Format: true or false"
        },
        "IsPersonalCardCharge": {
          "type": "boolean",
          "description": "Indicates whether the expense entry was imported from a personal card feed. Concur Expense uses the Yodlee API to import these card transactions. Format: true or false"
        },
        "Journey": {
          "$ref": "#/definitions/Journey"
        },
        "LastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date when the entry was last modified."
        },
        "LocationCountry": {
          "type": "string",
          "description": "The country where the expense was incurred. Format: 2-letter ISO 3166-1 country code"
        },
        "LocationID": {
          "type": "string",
          "description": "The unique identifier for the location where the expense was incurred."
        },
        "LocationName": {
          "type": "string",
          "description": "The location where the expense was incurred, usually the city name."
        },
        "LocationSubdivision": {
          "type": "string",
          "description": "The state, province, or other country subdivision where the expense was incurred. Format: ISO 3166-2:2007 country subdivision"
        },
        "OrgUnit1": {
          "$ref": "#/definitions/CustomField"
        },
        "OrgUnit2": {
          "$ref": "#/definitions/CustomField"
        },
        "OrgUnit3": {
          "$ref": "#/definitions/CustomField"
        },
        "OrgUnit4": {
          "$ref": "#/definitions/CustomField"
        },
        "OrgUnit5": {
          "$ref": "#/definitions/CustomField"
        },
        "OrgUnit6": {
          "$ref": "#/definitions/CustomField"
        },
        "PaymentTypeID": {
          "type": "string",
          "description": "The ID of the payment type for the entry. For mileage expenses, use the Cash payment type. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes always use the Cash payment type."
        },
        "PaymentTypeName": {
          "type": "string",
          "description": "The name of the payment type, localized to the user's language."
        },
        "PostedAmount": {
          "type": "number",
          "format": "double",
          "description": "The amount of the expense entry, in the report currency."
        },
        "ReceiptReceived": {
          "type": "boolean",
          "description": "Indicates whether this entry has been reviewed by a processor. Format: true or false"
        },
        "ReportID": {
          "type": "string",
          "description": "The report ID of the report where the entry will be added."
        },
        "ReportOwnerID": {
          "type": "string",
          "description": "The login ID of the report owner. Use the GET User Information function to learn details about this user."
        },
        "SpendCategoryCode": {
          "type": "string",
          "description": "The ID of the spending category that is specified for this expense entry."
        },
        "SpendCategoryName": {
          "type": "string",
          "description": "The name of the spending category that is specified for this expense entry, localized to the user's language."
        },
        "TaxReceiptType": {
          "type": "string",
          "description": "The receipt type for this entry. Possible values: T - tax receipt, R - regular receipt, N - no receipt"
        },
        "TransactionAmount": {
          "type": "number",
          "format": "double",
          "description": "The amount of the expense entry, in the transaction currency paid to the vendor.\tFor expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes use a distance instead of a transaction amount."
        },
        "TransactionCurrencyCode": {
          "type": "string",
          "description": "The 3-letter ISO 4217 currency code for the expense entry transaction amount. This is the currency in which the vendor was paid. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because for these two expense codes the currency is always the Report Currency."
        },
        "TransactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the good or service associated with this expense entry was provided. Format: YYYY-MM-DD"
        },
        "TripID": {
          "type": "string",
          "description": "The unique identifier of a trip in the Itinerary Service that includes a travel booking associated with this expense. Use GET ItineraryDetails to get information about this trip and the travel booking. This element is null when there is no trip associated with the expense."
        },
        "URI": {
          "type": "string",
          "description": "The URI to the resource."
        },
        "VendorDescription": {
          "type": "string",
          "description": "The name of the vendor for the expense entry. Maximum length: 64 characters"
        },
        "VendorListItemID": {
          "type": "string",
          "description": "The unique identifier for a vendor list item."
        },
        "VendorListItemName": {
          "type": "string",
          "description": "The name of an item from a vendor list."
        }
      }
    },
    "EntryPost": {
      "properties": {
        "Comment": {
          "type": "string",
          "description": "A comment that describes the expense entry. Maximum length: 500 characters"
        },
        "Custom1": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom10": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom11": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom12": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom13": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom14": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom15": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom16": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom17": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom18": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom19": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom2": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom20": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom21": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom22": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom23": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom24": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom25": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom26": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom27": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom28": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom29": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom3": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom30": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom31": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom32": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom33": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom34": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom35": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom36": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom37": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom38": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom39": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom4": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom40": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom5": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom6": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom7": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom8": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom9": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Description": {
          "type": "string",
          "description": "The description of the expense. Maximum length: 64 characters"
        },
        "ExchangeRate": {
          "type": "number",
          "format": "double",
          "description": "The currency conversion rate that converts the transaction amount that is in the transaction currency into the posted amount that is in the report currency. This element is typically not provided. If this element is empty for transactions in a currency different than the user's reimbursement currency, Expense will use the company's configured exchange rates to determine the posted amount for the transaction. If the system is not able to determine the exchange rate, a value of 1.0 will be used."
        },
        "ExpenseTypeCode": {
          "type": "string",
          "description": "The code for the expense type. Use <a target=\"_blank\" https://www.concursolutions.com/api/docs/index.html#!/ExpenseGroupConfigurations/Get_user_offset_limit_get_0\">GET /expense/expensegroupconfigurations</a> to learn the expense type code for expense types that are active for this report's policy."
        },
        "IsBillable": {
          "type": "boolean",
          "description": "Indicates whether the expense is billable. Format: true or false"
        },
        "IsPersonal": {
          "type": "boolean",
          "description": "Indicates whether the expense is personal (that is, non-reimbursable). Format: true or false"
        },
        "Journey": {
          "$ref": "#/definitions/Journey"
        },
        "LocationID": {
          "type": "string",
          "description": "The unique identifier for the location where the expense was incurred. Use the <a target=\"_blank\" https://www.concursolutions.com/api/docs/index.html#!/Locations/Get_offset_limit_name_city_countrySubdivision_country_administrativeRegion_get_0\">GET /common/locations</a> function to get information for this location."
        },
        "OrgUnit1": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit2": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit3": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit4": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit5": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit6": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "PaymentTypeID": {
          "type": "string",
          "description": "The ID of the payment type for the entry. For mileage expenses, use the Cash payment type. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes always use the Cash payment type."
        },
        "ReportID": {
          "type": "string",
          "description": "The report ID of the report where the entry will be added."
        },
        "TaxReceiptType": {
          "type": "string",
          "description": "The receipt type for this entry. Possible values: T - tax receipt, R - regular receipt, N - no receipt"
        },
        "TransactionAmount": {
          "type": "number",
          "format": "double",
          "description": "The amount of the expense entry, in the transaction currency paid to the vendor.\tFor expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes use a distance instead of a transaction amount."
        },
        "TransactionCurrencyCode": {
          "type": "string",
          "description": "The 3-letter ISO 4217 currency code for the expense entry transaction amount. This is the currency in which the vendor was paid. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because for these two expense codes the currency is always the Report Currency."
        },
        "TransactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the good or service associated with this expense entry was provided. Format: YYYY-MM-DD"
        },
        "VendorDescription": {
          "type": "string",
          "description": "The name of the vendor for the expense entry. Maximum length: 64 characters"
        },
        "VendorListItemID": {
          "type": "string",
          "description": "The unique identifier for a vendor list item."
        }
      }
    },
    "EntryPut": {
      "properties": {
        "Comment": {
          "type": "string",
          "description": "A comment that describes the expense entry. Maximum length: 500 characters"
        },
        "Custom1": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom10": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom11": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom12": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom13": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom14": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom15": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom16": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom17": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom18": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom19": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom2": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom20": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom21": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom22": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom23": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom24": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom25": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom26": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom27": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom28": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom29": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom3": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom30": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom31": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom32": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom33": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom34": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom35": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom36": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom37": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom38": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom39": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom4": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom40": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom5": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom6": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom7": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom8": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom9": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Description": {
          "type": "string",
          "description": "The description of the expense. Maximum length: 64 characters"
        },
        "ExchangeRate": {
          "type": "number",
          "format": "double",
          "description": "The currency conversion rate that converts the transaction amount that is in the transaction currency into the posted amount that is in the report currency. This element is typically not provided. If this element is empty for transactions in a currency different than the user's reimbursement currency, Expense will use the company's configured exchange rates to determine the posted amount for the transaction. If the system is not able to determine the exchange rate, a value of 1.0 will be used."
        },
        "ExpenseTypeCode": {
          "type": "string",
          "description": "The code for the expense type."
        },
        "IsBillable": {
          "type": "boolean",
          "description": "Indicates whether the expense is billable. Format: true or false"
        },
        "IsPersonal": {
          "type": "boolean",
          "description": "Indicates whether the expense is personal (that is, non-reimbursable). Format: true or false"
        },
        "Journey": {
          "$ref": "#/definitions/Journey"
        },
        "LocationID": {
          "type": "string",
          "description": "The unique identifier for the location where the expense was incurred."
        },
        "OrgUnit1": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit2": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit3": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit4": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit5": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "OrgUnit6": {
          "type": "string",
          "description": "The details from the Org Unit fields. These fields may not have data, depending on the configuration."
        },
        "PaymentTypeID": {
          "type": "string",
          "description": "The ID of the payment type for the entry.  For mileage expenses, use the Cash payment type. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes always use the Cash payment type."
        },
        "ReportID": {
          "type": "string",
          "description": "The report ID of the report where the entry will be added."
        },
        "TaxReceiptType": {
          "type": "string",
          "description": "The receipt type for this entry. Possible values: T - tax receipt, R - regular receipt, N - no receipt"
        },
        "TransactionAmount": {
          "type": "number",
          "format": "double",
          "description": "The amount of the expense entry, in the transaction currency paid to the vendor.\tFor expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes use a distance instead of a transaction amount."
        },
        "TransactionCurrencyCode": {
          "type": "string",
          "description": "The 3-letter ISO 4217 currency code for the expense entry transaction amount. This is the currency in which the vendor was paid. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because for these two expense codes the currency is always the Report Currency."
        },
        "TransactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the good or service associated with this expense entry was provided. Format: YYYY-MM-DD"
        },
        "VendorDescription": {
          "type": "string",
          "description": "The name of the vendor for the expense entry. Maximum length: 64 characters"
        },
        "VendorListItemID": {
          "type": "string",
          "description": "The unique identifier for a vendor list item."
        }
      }
    },
    "Journey": {
      "properties": {
        "BusinessDistance": {
          "type": "integer",
          "format": "int32",
          "description": "The portion of the journey for business use, in the report owner's unit of measure for distances. This element is required in order to post a personal car mileage expense entry, or to post a company car mileage expense when there is no PersonalDistance value. Format: positive integer. When using the Odometer elements, the sum of PersonalDistance and BusinessDistance must equal the difference between OdometerEnd and OdometerStart."
        },
        "EndLocation": {
          "type": "string",
          "description": "Indicates where the journey ended. This is also known as the \"To Location\". Maximum length: 100 characters"
        },
        "NumberOfPassengers": {
          "type": "integer",
          "format": "int32",
          "description": "The number of people in the vehicle during the journey. Positive Integer. Used with Variable-Rate, Personal or Company Car."
        },
        "OdometerEnd": {
          "type": "integer",
          "format": "int32",
          "description": "The odometer reading at the end of the journey. Format: positive integer that must be greater than the OdometerStart value. This element is used with Variable-Rate and Company Car configuration types."
        },
        "OdometerStart": {
          "type": "integer",
          "format": "int32",
          "description": "The odometer reading at the start of the journey. Format: positive integer. This element is used with Variable-Rate and Company Car configuration types."
        },
        "PersonalDistance": {
          "type": "integer",
          "format": "int32",
          "description": "The portion of the journey for personal use. This element is required in order to post a company car mileage expense when there is no BusinessDistance value. Format: positive integer. When using the Odometer elements, the sum of PersonalDistance and BusinessDistance must equal the difference between OdometerEnd and OdometerStart. Used with Company Car configuration types."
        },
        "StartLocation": {
          "type": "string",
          "description": "Indicates where the journey started. This is also known as the \"From Location\". Maximum length: 100 characters"
        },
        "UnitOfMeasure": {
          "type": "string",
          "description": "The unit of measure for distance and odometer values. Possible values: M - miles, K - kilometers"
        },
        "VehicleID": {
          "type": "string",
          "description": "The unique identifier for the vehicle used for this journey. This element is used only with Company Car configuration types. Use the GET Vehicles function to learn the Vehicle ID."
        }
      }
    },
    "Nullable`1": {
      "properties": {
        "HasValue": {
          "type": "boolean",
          "description": "Indicates whether the expense is personal (that is, non-reimbursable). Format: true or false"
        },
        "Value": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "Void": {
      "properties": {}
    }
  }
}
